<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGAAtDAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAALwklEQVRYR21XZ1SU
        1xadiGgSTZ6xBEs0oESDJQ+jKaK+aDSKIqgURVDpUqUz1KEzjRmmMAx9AAEFEYxEUECpggIqEmNFATXr
        xR9Gn8m/rOfa79yLw8qP9611+D6+cu+5++y9zx0B/na8+e8bvH71Er8+HcfjB/cx+vABno2NYezRY4yN
        POLxdPwJno6O8fPjhyP82ZPxUYzTmcWzsXH+7NmTpzTOM/z67AnGRh9h5MFDPH/+HH/99dfb2SaOyQT+
        /OMPjI48xGB/P9rb29HT04MrV/ooejE0NIyrV/spBtDX148rvdfQ0dmDrq4e9PZexcDAIK7R856eXly+
        1IHLlzvQ092Ljo4u9PcP4MaNITr34+7du/S8FaOjo29nfZvAn6//wPDNG6ipqeGhVqvh7++PY8eOUQQg
        Ly8f5WVVKK+ohqGsEtrcAqg1ehQVGhAeFomoqBhERERBochBYZEBKrWOR0lpBUpLKlBbW4fGxkbU1dWh
        7nQN3SvC7Z+HJxJ48+YNHt2/Ryvrg16vR3l5ObRaLaqrq7F161Y4OjrCx8eHEgpEmaGST6BUaKBW6VBY
        WIwdO3ZMvuPp6YnQsAhkieXIyJRCmaOFRqtHcXEpCgqKKJFaNNTX4afGBgQF+uH169cQvHr5AuMESUND
        A/Lz81FWVkbnQp4IG3D69Ol455138MEHH0CpVCEzU8wjO1uJ3Nw82NnZYebMmRAIBDzhM/VnkSRKQ1q6
        mKPgdugwR0en06O+vp4j/FPjjxDGRCBfnwfB+NhjqvEQSkpKKNNiPrFKpeJoxMfHY9GiRXxwFiKRCKGh
        4Th+PIzeIRTUWri7u2P27Nn8OStbSYkBqWlZkMlz4HHUi8qXh/Xr1yMwkBCkxZ05XYczdbVQysSU3EEI
        Ho08QGdnJ6qqqvikDIWcnBxeBqlUylfOBp87dy4vi5eXF8LCwuDr60tIZGLfvn346KOP+Du7d+/Gzp07
        YWtry5EJDQ3FkiVL+DM2joODA+pqT+NswxmcPlmJ1ausILh/7w6azzcRnLlwdXWFt7c3Dhw4wF9m/x8+
        fJhPkpSURNduUOUoYGpqCisrKwQHBmHPnj348MMP+SRBQUFv1XOFL6q1tXXy3NLSQqrpQsOZep7ACUMx
        vlpvDcEtYv+FpmYosxWQSCSIi4vjK4yJiYFGo+FlYdDFxsbyVR9wcaKaRvAoKCjgSRoRYCWoqKiAwWDg
        PAoOPk7fxXMVGAzl/H59Ha2+9hSK83UTCAxe68P5n85zBGQyGYc+JCQER44cgbOzMyTiTEgy0uHt5QEL
        CwvY2NjAcf9exMdEwvWgC1/1rFmzeAIuLi4TSRKChw4d4gtiz1kpGZ8Yvwr0+aitOYmiPC1WWq2AYOBq
        L5qbm0nDCr5KuVwOPz8/zJgxg8cxPx8E+nnz2jM1vP/++4iJjqIV5CEqLAS7d+3ik7NgkkxLS0NCQgKf
        kHGC3Wc8YNf19WfIO0hpxQUo1muxZvVKSoAQaGtr4wRkCOh0OgiF0ZPk8/X2QUigP0djypQpkMskcHba
        Tyg4QJQgRJ4mB9FRkdi4cSOvNYeZ5MZWy4hoTI6Vi0FfVV4KdbYEGoUUVp8vh+Dm9RtoamoijStpYiGS
        k5M5Eu+99x7mzZvHa+ri7MgnCAkOgpfnYZ7EypUr4ebqwssQER4KmVQMcVYGL5k4M4tzianBmEBhYSGh
        RqZEtddpFEgTxWOpxacQ3Bi8zhFgembM37ZtG2e2j48vAgIC+P+spqtXr6YV7aY6O3EuMDQY+Tw9jvLv
        2PdHj7jjCCnFycmJc4C5ozEBVlq1QsbZn5NNyaaJYP7pYgju3P6FmsdlguwESaQOA53t6CKn6ibJMOkw
        WDvaL6G15QL3cUNpMRrPNZByGnH9+gA8PDw4L6ZOncqTYIZWVFTES2nkAHNK5rQsAZk4DXqNElnGBG7d
        HCIELqOUGsnP33yNp60XceuIGwZ/2IZ6m4046OxCsB/lq/M/5ovo6Gg4O+5DsL8vKstKOTeMVsykyVwu
        X69DtlzKS8rusR5QUlwIbU42Uog3pQU6pCbGwsL8k4kSXCIj6kmMw7XkJNyoKsdQRCjubfgWD6dNQ/z3
        33NHi46O5JJi0DNWb9/2PSqJUPZUrjlz5vAE/KhsjA8sYUbUqKgoWFtbE4ecoZBmQZUtRWZKIilAg9io
        MHxmaU4+QL18JDISj2NjcLeuBr92deIh9ezh1atw13QafpkzG2dzlKgoM/D6mpiY8MkYUS9eaIKLkzPm
        z5/P723evJl7gZubG/cDVgJLS0vumjKJGKK4GGiVMhTqVCjIVcNmwzcQXGy+gEcbbXArLxeDFCPdHbh/
        th63li3F0LTpuDnNFFm2O0nzobAnWRkTkIizoNequE0vWLBgsgTtl9vQRmU833iOJ5manMJbcFVlOck2
        ZrIEWkJjueUyCNqJgMNLl+Garzdut7Xg5W//RgfV/45GhU7rf2KYyhC0Zg22bNnC2W5MICkxHgU6DZea
        0Qm9PD0QFhrC47D7IZ4AU88RdzeI01M4/LLMVCjF6VDLsmC5zAKCa93duDTfDLfJUPr2OqBz1j/QT5N2
        79qJQWEMOun6ZFYWNZB6bs/GBBIT4iAXZ+AgSdTMzIzf20WuGBkegbDjjDPR2LRpE9auXcs9RK9VI4H2
        APKsNCgoMpJiJ1TQR67VvNQCA9Sfm6nLXTCdilY63ztVjXMLzNBA14luruT90fAgJTC5scmSRYnUI1L5
        bmjxYhqI7gUHBuBKdyePk1UVHIlYctV8QiqV3rfbbQspya8oVwVZejIW0viCdmJ2+cdzMU6a7ouMwDlK
        oNnFGb8Q6UZ6unCJ6u+7ahV27tjOu50RgYT4WCjlWdy0jAkw2AP8vMi6/eC0zx7p6enctHb8sB37Hex4
        QiUFWhSQD6ikGVj8yUIIGjZtxNDpWvyHtsyn7HahmFb4G21SXj7/DYNVJ1A+Yybq5DJuRExixgSY9Rbq
        1LC3t8fChTQQ3WMcYdxITRFxW3YnN2SJ25ODRkdF4JivDzSUdKFWgRxJxoQVn/jMEi+ePcMpqr+G9n8l
        NEE1raSXdq76rVtQuWI5FNu3I1elgBO1YeYDbLLM9AlHY7ZrlGE8Sbn9UgsqDCXQkULqa6pQW10BMZVK
        lJiAr79ah9T4GCJhKiGQheVUekFvUiKGqFHUfrcZD7u7cIomGaNNyp3WFvwYK0QHcSPw0yXwJHf08/Ga
        TEAUHweVXEyrdJ0kIXfIAF/4HKWeQI3qwH57ONjZIpygZ0ix9r7R5lviQSIyRHFYtpSMqMzJEUoiWtVU
        E2jphRM2G3BBJkUGqUFC5cigvaDv3r285mx7xiZiIYwK54RiibGuye4x02ENKJKMjf2mYBtRxhvWOY3f
        mZubo8pQiOS4KOyy3QFBG20sMwh2+RQTGP61CedTUzBEq9d8+SUSppoiyMQUImEUl5NxEMYDtVKOTGqp
        qYlCrFu3Du++++7k8/8X00jOzLCKCvKhkaTDzcURuVoNBK9//x3BZvPhYzIVEnLEq7RhPEUbjGRaeRIh
        4Lv8M3gcdII3mcwekpE9EVVBpFRQV0siXTMUWClSqI+wcrCOaEvEY/JkjcqFFBVATUwulaCZfpAU65TI
        zkzGFiL/q1evJn6aDTc3IXLJYjTRNquK/LqruhKPbg0hjkoTuM8OQZ7uEMWE0YqFyM4QIT4sCDEh/kSk
        dDIUIWk6CXKKHGYylFhogA+UdJ1Hvi8nvRdqsqFIF0GaEgcJueEPWzaju7Nj4qcZ/0vHnSs96L/YhOLw
        MPRTk2mmlhqy/TtEeLtDGOiN2GBfSCmBzPhIpAnDaEDqajRwkVqBcupuRbTLyaWNhjIjBeH+PhAeD4Be
        KYZWlg59dgbUkhR4u7viu00b0NXR/nbWvyXADlaOE9RkHAieT8zmwYw6IYuFZFSLzD7GMlIDs08L8yVY
        a/0FtdOlWGP1OdZTz/j6S2usWrkCa2ir/flyS6yg+GLNKqxftxabvv0K++x3IUeZjRcvXrydjR3A/wCa
        wXzGcpU//QAAAABJRU5ErkJggg==
</value>
  </data>
</root>