<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGADaAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADb0lEQVRYR+2XTUhU
        URTH5xMrRif6ACuosDZCZkJIVISLWkQgREhRmygwRUKKqI1QCX0sKogi6GthkUFFCi36WBQWJRUWSETh
        QjcFgRVJZZJWvzPnvhln3rvPN1q7/vDnnP+5951z7n3vvjcT+o88MTMajdaEw+FD8HIkEmnHXoOn8Ovj
        8XgZc8I61Y1kMjk1kUjMMDIwJOE6ityDw/A9vAVPEz+MPQ6vwG44AntoZh9jRXJxDopostz4gVBGsk6S
        DsBjojVsxXRYx9xXXNdPsVq0dUd8QYJaEg3Cc8h8ty0Ct3JtP2zHL0xFg4KLmuEAbrVGxo3Z5HnKYl7g
        T9PQGGByIxd9wa3UyIQxhXz34RP8Ag3ZsZyJQ9g1Kv8aCsn7mhN0xmhPxGUSPCKCnajDbBY/TyTJ0Uax
        VvxwLBbbr+FQuVncCpU5oOAOJrzDnayRUAR9FptPE1L8DrYCKw+f5LiRGgH4cmQfG5mFMA28hbuNdiAJ
        LmC3qPSFFL+NrRCB72oAFKOH2JVlRqexVAawXk9qkJ1Ir1yltQGJt0F5iWXAypsIPjDSC85OeDXhKi4g
        5tkA2Ea9HuMrzOTUw+cDr53wLC7waaCU2C9sUiUg0I3ZrsoXzk7IM5F1z3PBmK2BAmIj2Mw3gUAfZoOq
        MSFJL8Jn+J7FBYw7DVzXSAbEvmFWqQIEejE1qsZEattNYuvpYNyvgUHMSlWAwHNMvSpfOPd8CZTk1tPB
        mO0WJIjJM1CqEhBohSeNtMHrnksBz/cEcVsDcuR/YiepBByLnQTli2XD6JXnwnMniNka2EW9LuOnUcJE
        eTJLVGbB92k3cO2ErQH0I3jQyAzo6iED8qtnNJyV+xV3kLUT+F4NLEIPY90L5eslv/u+4hZrJL1yr223
        Ib0TWFcD+DfhVSPdYPCuTBKfHdmEyae4AynazAenCV8+chs1HFpPXM7/fJXemMsFn2DuV3GiWEhxydtg
        tB3citVMlhdFkFdzECwgXx+UH7fBQBPVdPudi44iYxodF6rI8YF8LfhRDQVHJRf3wpf4VRoKjFlcdx4O
        sZC96PH9NwCFdH+CRD9gJ1pe1/NSI24k4FrmtcBBCnfwxyTI8Q0EWdEB+Ab+hh9hF+yA8s9J7rH8bfsM
        LzE/86H5B5gj7wxWWA/3wEYoR3YxzPM+h0J/AMfnnh8+dDgjAAAAAElFTkSuQmCC
</value>
  </data>
</root>