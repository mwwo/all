<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAoKCgBZWVlBGBgYAxubm4aampqK2xsbDptbW1CbGxsRWpqakZqampGampqRmpqakZqampGampqRmpq
        akZqampGampqRmpqakZqampGampqRmpqakZqampGampqRmpqakZsbGxFbW1tQmtraztra2ssampqG29v
        bwxgYGAEKCgoAW5ubgRycnIPa2trJWtra0Zra2tibW1tdWtra39sbGyCbGxsg2xsbINsbGyDbGxsg2xs
        bINsbGyDbGxsg2xsbINsbGyDbGxsg2xsbINsbGyDbGxsg2xsbINsbGyDbGxsg2xsbIJtbW1/bGxsdm1t
        bWNra2tGbm5uJmtraw9tbW0EbGxsC2xsbCJtbW1MbW1tdoBrYK6SalbTmGtU35lsVeCZbVbgmm5X4Jtv
        WOCccFngnXFZ4J5yWuCfc1zgoHVc4KF1XeCidl7goXVd4KB0XOCfc1vgnnJa4J1xWeCccFngm29Y4Jtu
        Vt+VbVjVg2xgsGxsbHdra2tNaGhoJHFxcQtqamoVbGxsO3FraXaWZ1Dcxp6K/8efiv/IoIv/yaGM/8mi
        jf/Lo43/y6OP/8ylj//NpZD/zqaR/86nkf/PqJP/0KiT/9Cpk//QqJP/z6iS/86nkf/OppH/zaWQ/8yl
        j//Lo47/y6ON/8mhjf/JoYz/m2pR33JrZ3psbGw9bW1tFmpqaiFsbGxRlmdO06RmR//Gnor/uIZs/610
        Vf+sb1D/rXBQ/65yUf+wc1L/sXRT/7J2Vf+zd1b/tHhX/7V5WP+1eln/tnpZ/7V6WP+0eVj/tHhX/7N3
        Vv+ydlT/sXRT/7BzU/+xd1j/uods/8igi/+oakr/nGpQ2m1tbVFtbW0haWlpKYFoXH6jZEX/xJ2I/7B6
        Xv+naUn/qGpK/6lsS/+rbU3/rG5O/6loRv+paEX/q2lG/65vTf+ydVT/s3VU/7N2VP+0dlX/sXFP/65t
        Sf+tbEj/rGtI/69xUP+ucVD/rW9P/6xuTf+qbUz/s3xf/8efi/+naEn/hmlah21tbShtbW0tk2VOtcSc
        iP+3hWz/pWdH/6ZoSP+oakr/qWtL/6psS/+sb0//0rCe/9m7rP/ZvK3/xpmA/65vTP+xdFP/snRT/69w
        Tv/GmYD/276u/9q9rf/VtaT/sXVV/61vTv+tb07/q25N/6psTP+pa0v/uIZs/8aeiv+XaFC5bGxsK2tr
        ay2XZEvHxJyH/6tyVf+kZkf/pmhI/6dpSf+oa0r/qWpK/6xvUP/38+/////////////bv7D/qmlF/7By
        Uf+wc1L/q2pG/9q9rv////////////v59/+yeFn/q21M/6xuTv+qbUz/qWtL/6hqSv+tclT/xp2K/5ln
        TsZqamosa2trLZZkS8bDm4f/p2tO/6RmRv+lZ0f/pmlJ/6hqSv+oakn/q29P//Pr5v///////////9i6
        qv+paEX/r3FQ/69xUP+qaUX/17mp////////////9/Ht/7F2V/+qbEv/q21N/6psTP+pakv/p2lJ/6lt
        Tv/FnYn/mWdNxWpqaixra2stlmNKxsOahv+ma03/o2VF/6RmR/+maEj/p2lJ/6dpSP+qbU7/8+vm////
        ////////17qq/6hmQ/+tcE//rXBP/6lnRP/WuKf////////////38e3/r3VW/6lrSv+qbEz/qWtL/6hq
        Sv+maEn/qGxO/8Wdif+YZkzFampqLGtray2VY0rGwpqG/6ZqTf+jZEX/pGVG/6VnR/+maEj/pmhH/6ls
        Tf/z6+b////////////Wuan/p2VC/6xuTv+sb07/p2ZD/9a3p/////////////fw7f+vdFX/qWpJ/6lr
        S/+oakr/p2lJ/6ZoSP+obE3/xZyI/5hlTMVqamosa2trLZViScbCmob/pWlM/6JkRP+jZUX/pGZG/6Vn
        R/+lZ0f/qGtM//Pq5v///////////9a4qf+lZEH/q21M/6ttTf+mZEL/1ben////////////9vDt/61z
        VP+naUj/qGpK/6dpSf+maEj/pWdH/6drTP/EnIj/mGVLxWpqaixra2stlGFIxsKZhv+kaUz/oWNE/6Jk
        Rf+jZUb/pGZH/6RmRv+nakv/8+rm////////////1rio/6RiQP+pbEv/qmxM/6VjQf/Vtqb/////////
        ///28O3/rHFT/6ZnR/+naUn/pmhI/6VnR/+kZkb/pmpL/8Sch/+XZUvFampqLGtray2UYUjGwZmF/6Ro
        S/+gYkP/oWNE/6JkRf+jZUb/o2VF/6ZpSv/z6ub////////////Vt6j/o2E//6hqSv+oakr/o2E//9S1
        pf////////////bw7f+rcFL/pWZG/6ZoSP+lZ0f/pGZG/6NlRf+laUv/w5uH/5ZkS8Vqamosa2trLZNh
        SMbAmIX/o2dK/59hQv+gYkP/oWNE/6JkRf+iY0T/pWhJ//Lq5f///////////9S2p/+hXz3/p2lJ/6dp
        Sf+iYD7/07Wl////////////9vDt/6pvUf+kZUX/pGZH/6RlRv+jZUX/omRE/6RoSv/Cmob/lWNKxWpq
        aixra2stk2BHxsCYhP+jZ0n/nmBB/59hQv+gYkP/oWNE/6FiQ/+kZ0j/8url////////////1Lam/55c
        Ov+jYkH/omJC/59cOv/Ts6T////////////28O3/qW5Q/6NkQ/+jZUb/o2RF/6JkRP+hY0P/o2dJ/8Ka
        hv+UYknFampqLGtray2RX0bGv5eD/6JmSP+dX0D/nmBB/59hQv+gYkP/oGFC/6NmR//y6eX/////////
        ///RsaH/omJC/7WCaP+1g2r/o2VF/9Cvn/////////////bw7P+obU7/omJC/6JkRP+hY0T/oWJD/6Bh
        Q/+iZkf/wZmF/5RhSMVqamosa2trLZFeRca/loP/oGVH/51eP/+dX0D/nmBB/59gQf+fYED/omRG//Lp
        5f////////////Lp5P/07Of////////////17ur/8unk////////////9u/s/6drTf+gYUH/oWJD/6Bi
        Q/+gYUL/n2BB/6FkR//AmIX/k2BHxWpqaixra2stkF1Fxr6Wgv+fZEb/m1w+/5xdP/+dXkD/nl9A/51e
        P/+gYkT/8unl///////////////////////59vT/+PXz///////////////////////27+z/pWlL/55f
        P/+gYUL/n2BC/55gQf+eX0D/oGNG/8CXhP+SX0bFampqLGtray2QXUTGvpWC/55iRf+ZWjz/mVo8/5pb
        PP+bXD7/nV4//6JlR//y6eX//////////v/m0MX/xZeA/7d/Y/+2f2P/w5R8/+XNwf/+/fz///////bv
        7P+nbE7/nl8//51eP/+bXT7/m10+/5tdPv+eYkT/v5aD/5FeRsVqamosa2trLY5bQ8a7k3//nWFE/55g
        Qv+naUv/r3JT/7Z5W/+7fl//wIVn//v39f/8+fj/0qaQ/75+Xv/AgWL/woVm/8KFZ//AgmP/vn5e/8+h
        if/69vP//vz7/8OKbv+8fmD/uHtd/7F0Vf+pa03/oWNE/55hQ/+9lIH/j1xDxWpqaixra2stmGZNxsyk
        kf+8gmf/wINm/8OHaf/Dh2r/w4dp/8KHaf/DiGr/3Lqp/9Gii/+/gGD/w4hq/8OIav/DiGr/w4hq/8OI
        av/EiGr/wIFh/8+fh//evaz/xYtt/8OHaf/EiGr/xIlr/8SIav/BhWf/vYJm/82lkv+YZk7FampqLGxs
        bC2zg2rG2rSh/8eOcf/Dh2n/w4dp/8OHaf/Dh2r/xIhq/8SIav+/fVz/wIBg/8KDZP/EiGn/xYps/8WK
        bP/Fimz/xops/8WIav/DhGX/wYFh/799XP/FiWv/xYlr/8SJa//EiGr/xIdq/8SIav/GjG//2rSg/7OD
        asVra2ssbGxsK7WEbMXatKD/yY9y/8aJa//GiWv/xYlr/8WKbP/Fimz/xIZn/9mxnf/u3dT/587B/8qR
        df/GiWv/x4xt/8eMbf/Gimz/yY9y/+bLvf/v3dT/27aj/8WIaf/Gi23/xops/8aKbP/Gimz/xYlr/8eN
        cP/atKD/tYRsxW1tbStoaGgnuIZuwty1ov/LkXX/yIxu/8iMbv/IjG7/yIxu/8aIav/RoIf/////////
        ////////6tPI/8aIaP/JjW//yY1v/8aIaP/oz8P/////////////////1KaO/8aIaf/IjG7/yIxu/8iM
        bv/IjG7/ypBz/9y1ov+4hm3CbW1tJ2xsbB29inC83rek/82UeP/Lj3H/y49x/8uPcf/Lj3H/yIlq/922
        ov/////////////////37+v/yo5w/8uOcf/Lj3L/yYtt//Xq5P/////////////////gvav/x4lp/8uP
        cf/Lj3H/y49x/8uPcf/Nk3X/3rek/72KcLxtbW0dZ2dnEsOOc7Xfuab/0ZuA/82SdP/NknT/zZJ0/82S
        dP/Mj3L/0ZuA//r08f///////////+TDsv/LjW7/zZJ0/82SdP/LjW7/4b+t////////////+/f1/9Of
        hf/Mj3H/zZJ0/82SdP/NknT/zZJ0/9CZff/fuab/w45ztW1tbRJxcXEIx5F2juG7qP/arJX/0JV3/9CV
        d//QlXf/0JV3/9CVd//OkXP/1qKI/+XDsv/ftqH/z5N0/8+Udv/QlXf/0JV3/8+Udv/OknP/3rSe/+XD
        sv/XpYv/zpFy/9CVd//QlXf/0JV3/9CVd//QlXf/2quT/+G7qP/IkXaWcnJyCF9fXwPEknk10pd6/+K9
        qv/Zpo3/0pd6/9KXev/Sl3r/0pd6/9KXev/RlXb/z5Fy/9CSc//Sl3n/0pd6/9KXev/Sl3r/0pd6/9KX
        ef/QknT/z5Fy/9GUdv/Sl3r/0pd6/9KXev/Sl3r/0pd6/9iki//ivKn/0pd6/8eTeUJfX18DCQkJAVlZ
        WQPSmX2b1Zp9/+S+rP/dr5j/16KH/9aegv/VnYH/1Z2B/9Wdgf/VnYH/1Z2B/9Wdgf/VnYH/1Z2B/9Wd
        gf/VnYH/1Z2B/9Wdgf/VnYH/1Z2B/9Wdgf/VnYH/1p6C/9eih//drpf/5L6s/9Waff/SmX2pWVlZAwkJ
        CQEAAAAAAAAAANqpkQbWnX+a151//OXArf/lwK3/5cCt/+XArf/lwK3/5cCt/+XArf/lwK3/5cCt/+XA
        rf/lwK3/5cCt/+XArf/lwK3/5cCt/+XArf/lwK3/5cCt/+XArf/lwK3/5cCt/+XArf/XnX//1p1/otmj
        iQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVnH8w2Z+Cf9qfgqDan4Kg2p+CoNmegqHZnoKh2Z6Codme
        gqHZnoKh2Z6CodmegqHZnoKh2Z6CodmegqHZnoKh2Z6CodmegqHZnoKh2Z6CodqfgqDan4Kg2p+CgdWc
        fzUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwAAAA/AAAA8=
</value>
  </data>
</root>