<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Owf+B6ZChb7RDvMfAAAAAElFTkSuQmCC
</value>
  </data>
</root>