<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>