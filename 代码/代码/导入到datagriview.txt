 OpenFileDialog Ofile = new OpenFileDialog();

        DataSet ds = new DataSet();

   dataGridView1.Columns.Clear();


            this.ds.Tables.Clear();
            this.Ofile.FileName = "";
            this.dataGridView1.DataSource = "";
            this.Ofile.ShowDialog();
            string fileName = this.Ofile.FileName;
            textBox1.Text = fileName;
            if (fileName.Trim().ToUpper().EndsWith("xls") || fileName.Trim().ToUpper().EndsWith("XLS"))//判断所要的?展名?型；
            {
                if (fileName != null && fileName != "")
                {
                    string connectionString = " Provider = Microsoft.Jet.OLEDB.4.0 ; Data Source = " + fileName + "; Extended Properties='Excel 8.0;HDR=YES;IMEX=1'";
                    OleDbConnection oleDbConnection = new OleDbConnection(connectionString);
                    oleDbConnection.Open();
                    DataTable oleDbSchemaTable = oleDbConnection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, new object[]
                    {
                    null,
                    null,
                    null,
                    "TABLE"
                    });
                    string str = oleDbSchemaTable.Rows[0]["TABLE_NAME"].ToString();
                    string selectCommandText = "select * from [" + str + "]";
                    OleDbDataAdapter oleDbDataAdapter = new OleDbDataAdapter(selectCommandText, oleDbConnection);
                    oleDbDataAdapter.Fill(this.ds, "temp");
                    oleDbConnection.Close();
                    this.dataGridView1.DataSource = this.ds.Tables[0];

                    string csvDir = openFileDialog1.FileName.ToString();
                }
















导入CSV

  if (fileName.Trim().ToUpper().EndsWith("CSV"))//判断所要的?展名?型；
            {
                int ipos = fileName.LastIndexOf("\\");
                string filePath = fileName.Substring(0, ipos + 1);
                string connStr = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + filePath + ";Extended Properties='text;HDR=YES;FMT=Delimited;'";//有列?的
                string commandText = "select * from " + fileName.Replace(filePath, "");//SQL?句；
                OleDbConnection olconn = new OleDbConnection(connStr);
                olconn.Open();
                OleDbDataAdapter odp = new OleDbDataAdapter(commandText, olconn);
                DataTable dt = new DataTable();
                odp.Fill(dt);
                dataGridView1.AutoGenerateColumns = true;//有列?的
                dataGridView1.DataSource = dt.DefaultView;//有列?的

            }






#region   dataGridView导出CSV带进度条，导出分列
        public static void csv(DataGridView dgv)
        {

            if (dgv.Rows.Count == 0)
            {
                MessageBox.Show("No data available!", "Prompt", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            else
            {
                SaveFileDialog saveFileDialog = new SaveFileDialog();
                saveFileDialog.Filter = "CSV files (*.csv)|*.csv";
                saveFileDialog.FilterIndex = 0;
                saveFileDialog.RestoreDirectory = true;
                saveFileDialog.CreatePrompt = true;
                saveFileDialog.FileName = null;
                saveFileDialog.Title = "Save path of the file to be exported";
                if (saveFileDialog.ShowDialog() == DialogResult.OK)
                {
                    Stream myStream = saveFileDialog.OpenFile();
                    StreamWriter sw = new StreamWriter(myStream, System.Text.Encoding.GetEncoding(-0));
                    string strLine = "";
                    try
                    {
                        //Write in the headers of the columns.
                        for (int i = 0; i < dgv.ColumnCount; i++)
                        {
                            if (i > 0)
                                strLine += ",";
                            strLine += dgv.Columns[i].HeaderText;
                        }
                        strLine.Remove(strLine.Length - 1);
                        sw.WriteLine(strLine);
                        strLine = "";
                        //Write in the content of the columns.
                        for (int j = 0; j < dgv.Rows.Count; j++)
                        {
                            strLine = "";
                            for (int k = 0; k < dgv.Columns.Count; k++)
                            {
                                if (k > 0)
                                    strLine += ",";
                                if (dgv.Rows[j].Cells[k].Value == null)
                                    strLine += "";
                                else
                                {
                                    string m = dgv.Rows[j].Cells[k].Value.ToString().Trim();
                                    strLine += m.Replace(",", "，");
                                }
                            }
                            strLine.Remove(strLine.Length - 1);
                            sw.WriteLine(strLine);
                            //Update the Progess Bar.
                           
                        }
                        sw.Close();
                        myStream.Close();
                        MessageBox.Show("Data has been exported to：" + saveFileDialog.FileName.ToString(), "Exporting Completed", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Exporting Error", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
            }

        }
        #endregion
